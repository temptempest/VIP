//
//  NewsModels.swift
//  VIP
//
//  Created by temptempest on 15.08.2023.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

typealias ArticlesList = News.Response.ArticlesList

enum News {
	struct Request {}
	struct Response {
		var result: Result<ArticlesList,Error>
		
		struct ArticlesList: Codable, Hashable {
			let status: String
			let articles: [Article]
		}

		struct Article: Codable, Hashable {
			let title: String
			let articleDescription: String?
			enum CodingKeys: String, CodingKey {
				case title
				case articleDescription = "description"
			}
		}
	}
	
	enum ViewModel {
		case success(ArticlesList)
		case failure(String)
	}
}

/// ---
/// Reuseable Category & DataSource
enum NewsCategory: String, CaseIterable {
	static let title = "News"
	case todaySection = "Today"
	
	typealias Item = News.Response.Article
	typealias Category = NewsCategory

	final class DataSource: UITableViewDiffableDataSource<Category, Item> {
		override func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
			Category.allCases[section].rawValue
		}
	}
}
/// ---
